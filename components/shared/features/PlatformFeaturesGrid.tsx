"use client";import { Shield, Users, Zap, BarChart3, Building, CheckCircle } from "lucide-react";import { cn } from "@/lib/utils";// Platform features content - 5 uniform cards per variantconst FEATURES_CONTENT = {  restaurant: {    features: [      {        type: "automation",        title: "Smart Automation",        description: "AI-powered workflows that adapt to your restaurant's unique needs and peak service hours.",        icon: Zap,        stats: { primary: "85%", label: "Faster Task Completion" },        features: ["Intelligent scheduling", "Auto-priority sorting", "Smart notifications"]      },      {        type: "compliance",        title: "Compliance Hub",        description: "Stay ahead of health, safety, and regulatory requirements with automated monitoring and alerts.",        icon: Shield,        stats: { primary: "99.8%", label: "Compliance Rate" },        features: ["Real-time alerts", "Digital checklists", "Audit trails"]      },      {        type: "analytics",        title: "Performance Insights",        description: "Data-driven decisions with comprehensive analytics and predictive intelligence for operations.",        icon: BarChart3,        stats: { primary: "94", label: "Operational Score" },        features: ["Custom dashboards", "Trend analysis", "Predictive alerts"]      },      {        type: "coordination",        title: "Team Coordination",        description: "Seamless communication and task management across all roles and shifts in real-time.",        icon: Users,        stats: { primary: "156", label: "Active Team Members" },        features: ["Role-based tasks", "Shift handoffs", "Real-time updates"]      },      {        type: "scaling",        title: "Multi-Location Scale",        description: "Centralized management for restaurant groups with location-specific customization options.",        icon: Building,        stats: { primary: "24", label: "Locations Managed" },        features: ["Unified dashboard", "Location insights", "Standardized processes"]      }    ]  },  bar: {    features: [      {        type: "automation",        title: "Bar Automation",        description: "Streamlined opening procedures, inventory tracking, and closing protocols tailored for bars.",        icon: Zap,        stats: { primary: "78%", label: "Process Efficiency" },        features: ["Smart inventory", "Opening checklists", "Closing protocols"]      },      {        type: "compliance",        title: "ID & Safety Compliance",        description: "Automated age verification, incident tracking, and regulatory compliance monitoring.",        icon: Shield,        stats: { primary: "100%", label: "ID Check Rate" },        features: ["Age verification", "Incident logs", "Safety protocols"]      },      {        type: "analytics",        title: "Peak Performance",        description: "Real-time analytics for rush periods, order volumes, and staff coordination insights.",        icon: BarChart3,        stats: { primary: "18.2", label: "Orders/Min Peak" },        features: ["Rush analytics", "Volume tracking", "Performance metrics"]      },      {        type: "coordination",        title: "Bar Team Flow",        description: "Coordinate bartenders, barbacks, and managers for seamless service during busy periods.",        icon: Users,        stats: { primary: "89", label: "Active Staff" },        features: ["Bartender tasks", "Support coordination", "Shift management"]      },      {        type: "scaling",        title: "Multi-Bar Network",        description: "Manage multiple bar locations with consistent standards and centralized oversight.",        icon: Building,        stats: { primary: "12", label: "Bar Locations" },        features: ["Network management", "Standard procedures", "Location analytics"]      }    ]  },  cafe: {    features: [      {        type: "automation",        title: "Café Workflows",        description: "Optimized workflows for coffee preparation, order management, and quality control.",        icon: Zap,        stats: { primary: "2.8", label: "Min Avg Order" },        features: ["Order optimization", "Quality checks", "Preparation flow"]      },      {        type: "compliance",        title: "Food Safety Standards",        description: "Maintain high food safety and quality standards with automated monitoring systems.",        icon: Shield,        stats: { primary: "98.5%", label: "Safety Score" },        features: ["Safety monitoring", "Quality control", "Health compliance"]      },      {        type: "analytics",        title: "Equipment Insights",        description: "Monitor equipment performance, maintenance schedules, and optimal coffee quality metrics.",        icon: BarChart3,        stats: { primary: "96%", label: "Equipment Uptime" },        features: ["Equipment tracking", "Maintenance alerts", "Performance data"]      },      {        type: "coordination",        title: "Café Team Sync",        description: "Coordinate baristas, shift leads, and managers for smooth coffee service operations.",        icon: Users,        stats: { primary: "45", label: "Team Members" },        features: ["Barista coordination", "Shift planning", "Team communication"]      },      {        type: "scaling",        title: "Coffee Chain Growth",        description: "Scale your café operations across multiple locations while maintaining quality standards.",        icon: Building,        stats: { primary: "8", label: "Café Locations" },        features: ["Multi-location", "Quality consistency", "Growth management"]      }    ]  }};export interface PlatformFeaturesGridProps {  variant?: 'restaurant' | 'bar' | 'cafe';  className?: string;}export function PlatformFeaturesGrid({   variant = 'restaurant',  className}: PlatformFeaturesGridProps) {  const content = FEATURES_CONTENT[variant];  // Unified card renderer for all feature types (same size)  const renderFeatureCard = (feature: any, index: number) => {    const Icon = feature.icon;        return (      <div key={index} className="enterprise-card-subtle p-6 rounded-2xl border bg-gradient-to-br from-card via-card to-muted/10 backdrop-blur-sm">        <div className="space-y-4">          {/* Icon */}          <div className="enterprise-icon-primary w-12 h-12 rounded-xl flex items-center justify-center">            <Icon className="h-6 w-6" />          </div>                    {/* Header */}          <div>            <h3 className="text-lg font-semibold text-foreground mb-2">{feature.title}</h3>            <p className="text-sm text-muted-foreground">{feature.description}</p>          </div>                    {/* Stats */}          <div className="flex items-center justify-between p-3 bg-muted/30 rounded-lg">            <div className="text-2xl font-bold text-primary">{feature.stats.primary}</div>            <div className="text-sm text-muted-foreground">{feature.stats.label}</div>          </div>                    {/* Features List */}          <div className="space-y-2">            {feature.features.map((item: string, featureIndex: number) => (              <div key={featureIndex} className="flex items-center gap-2 text-sm">                <CheckCircle className="h-4 w-4 text-primary" />                <span className="text-muted-foreground">{item}</span>              </div>            ))}          </div>        </div>      </div>    );  };  return (    <div className={cn("py-20 lg:py-32", className)}>      <div className="container">        {/* 5-column grid for larger screens */}        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-6">          {content.features.map((feature, index) => renderFeatureCard(feature, index))}        </div>      </div>    </div>  );}export default PlatformFeaturesGrid;