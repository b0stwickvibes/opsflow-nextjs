// lib/ai/page-blueprint.ts
import type { PageBlueprint } from './marketingPlaybook'

function unique<T>(arr: T[]): T[] {
  return Array.from(new Set(arr))
}

// Produces a minimal Next.js App Router page file content from a blueprint.
export function compileNextPage(blueprint: PageBlueprint): string {
  const importsByPath = new Map<string, string[]>()
  for (const s of blueprint.sections) {
    const arr = importsByPath.get(s.importPath) || []
    arr.push(s.importName)
    importsByPath.set(s.importPath, arr)
  }

  const importLines = Array.from(importsByPath.entries()).map(([path, names]) => {
    const uniqueNames = unique(names).sort()
    return `import { ${uniqueNames.join(', ')} } from '${path}'`
  })

  const body = blueprint.sections
    .map((s) => {
      const props = s.props ? JSON.stringify(s.props) : ''
      // JSON -> JSX props: convert keys to propName={value}
      let propString = ''
      if (props) {
        const obj = s.props as Record<string, any>
        propString = Object.entries(obj)
          .map(([k, v]) => `${k}={${JSON.stringify(v)}}`)
          .join(' ')
      }
      return `<${s.importName}${propString ? ' ' + propString : ''} />`
    })
    .join('\n\n      ')

  return `// Generated by page-blueprinter\n\n${importLines.join('\n')}\n\nexport default function Page() {\n  return (\n    <>\n      ${body}\n    </>\n  )\n}\n`
}

